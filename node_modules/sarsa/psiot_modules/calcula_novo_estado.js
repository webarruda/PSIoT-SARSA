// Calcula o novo estado dos buffers e das taxas de transmissao

function calcula_novo_estado(x, y, z) {
    switch (y) {
        case '+T1+T2+T3':
            return { 'a': x[0] * 0.9, 'b': x[1] * 0.9, 'c': x[2] * 0.9, 'j': 0, 't': z[0] * 1.1, 'r': z[1] * 1.1, 's': z[2] * 1.1 };
            break;

        case '+T1+T2-T3':
            return { 'a': x[0] * 0.9, 'b': x[1] * 0.9, 'c': x[2] * 1.1, 'j': 1, 't': z[0] * 1.1, 'r': z[1] * 1.1, 's': z[2] * 0.9 };
            break;

        case '+T1+T2N3':
            return { 'a': x[0] * 0.9, 'b': x[1] * 0.9, 'c': x[2], 'j': 2, 't': z[0] * 1.1, 'r': z[1] * 1.1, 's': z[2] };
            break;

        case '+T1-T2+T3':
            return { 'a': x[0] * 0.9, 'b': x[1] * 1.1, 'c': x[2] * 0.9, 'j': 3, 't': z[0] * 1.1, 'r': z[1] * 0.9, 's': z[2] * 1.1 };
            break;

        case '+T1-T2-T3':
            return { 'a': x[0] * 0.9, 'b': x[1] * 1.1, 'c': x[2] * 1.1, 'j': 4, 't': z[0] * 1.1, 'r': z[1] * 0.9, 's': z[2] * 0.9 };
            break;

        case '+T1-T2N3':
            return { 'a': x[0] * 0.9, 'b': x[1] * 1.1, 'c': x[2], 'j': 5, 't': z[0] * 1.1, 'r': z[1] * 0.9, 's': z[2] };
            break;

        case '+T1N2+T3':
            return { 'a': x[0] * 0.9, 'b': x[1], 'c': x[2] * 0.9, 'j': 6, 't': z[0] * 1.1, 'r': z[1], 's': z[2] * 1.1 };
            break;

        case '+T1N2-T3':
            return { 'a': x[0] * 0.9, 'b': x[1], 'c': x[2] * 1.1, 'j': 7, 't': z[0] * 1.1, 'r': z[1], 's': z[2] * 0.9 };
            break;

        case '+T1N2N3':
            return { 'a': x[0] * 0.9, 'b': x[1], 'c': x[2], 'j': 8, 't': z[0] * 1.1, 'r': z[1], 's': z[2] };
            break;

        case '-T1+T2+T3':
            return { 'a': x[0] * 1.1, 'b': x[1] * 0.9, 'c': x[2] * 0.9, 'j': 9, 't': z[0] * 0.9, 'r': z[1] * 1.1, 's': z[2] * 1.1 };
            break;

        case '-T1+T2-T3':
            return { 'a': x[0] * 1.1, 'b': x[1] * 0.9, 'c': x[2] * 1.1, 'j': 10, 't': z[0] * 0.9, 'r': z[1] * 1.1, 's': z[2] * 0.9 };
            break;

        case '-T1+T2N3':
            return { 'a': x[0] * 1.1, 'b': x[1] * 0.9, 'c': x[2], 'j': 11, 't': z[0] * 0.9, 'r': z[1] * 1.1, 's': z[2] };
            break;

        case '-T1-T2+T3':
            return { 'a': x[0] * 1.1, 'b': x[1] * 1.1, 'c': x[2] * 0.9, 'j': 12, 't': z[0] * 0.9, 'r': z[1] * 0.9, 's': z[2] * 1.1 };
            break;

        case '-T1-T2-T3':
            return { 'a': x[0] * 1.1, 'b': x[1] * 1.1, 'c': x[2] * 1.1, 'j': 13, 't': z[0] * 0.9, 'r': z[1] * 0.9, 's': z[2] * 0.9 };
            break;

        case '-T1-T2N3':
            return { 'a': x[0] * 1.1, 'b': x[1] * 1.1, 'c': x[2], 'j': 14, 't': z[0] * 0.9, 'r': z[1] * 0.9, 's': z[2] };
            break;

        case '-T1N2+T3':
            return { 'a': x[0] * 1.1, 'b': x[1], 'c': x[2] * 0.9, 'j': 15, 't': z[0] * 0.9, 'r': z[1], 's': z[2] * 1.1 };
            break;

        case '-T1N2-T3':
            return { 'a': x[0] * 1.1, 'b': x[1], 'c': x[2] * 1.1, 'j': 16, 't': z[0] * 0.9, 'r': z[1] * 1.1, 's': z[2] * 0.9 };
            break;

        case '-T1N2N3':
            return { 'a': x[0] * 1.1, 'b': x[1], 'c': x[2], 'j': 17, 't': z[0] * 0.9, 'r': z[1], 's': z[2] };
            break;

        case 'N1+T2+T3':
            return { 'a': x[0], 'b': x[1] * 0.9, 'c': x[2] * 0.9, 'j': 18, 't': z[0], 'r': z[1] * 1.1, 's': z[2] * 1.1 };
            break;

        case 'N1+T2-T3':
            return { 'a': x[0], 'b': x[1] * 0.9, 'c': x[2] * 1.1, 'j': 19, 't': z[0], 'r': z[1] * 1.1, 's': z[2] * 0.9 };
            break;

        case 'N1+T2N3':
            return { 'a': x[0], 'b': x[1] * 0.9, 'c': x[2], 'j': 20, 't': z[0], 'r': z[1] * 1.1, 's': z[2] };
            break;

        case 'N1-T2+T3':
            return { 'a': x[0], 'b': x[1] * 1.1, 'c': x[2] * 0.9, 'j': 21, 't': z[0], 'r': z[1] * 0.9, 's': z[2] * 1.1 };
            break;

        case 'N1-T2-T3':
            return { 'a': x[0], 'b': x[1] * 1.1, 'c': x[2] * 1.1, 'j': 22, 't': z[0], 'r': z[1] * 0.9, 's': z[2] * 0.9 };
            break;

        case 'N1-T2N3':
            return { 'a': x[0], 'b': x[1] * 1.1, 'c': x[2], 'j': 23, 't': z[0], 'r': z[1] * 0.9, 's': z[2] };
            break;

        case 'N1N2+T3':
            return { 'a': x[0], 'b': x[1], 'c': x[2] * 0.9, 'j': 24, 't': z[0], 'r': z[1], 's': z[2] * 1.1 };
            break;

        case 'N1N2-T3':
            return { 'a': x[0], 'b': x[1], 'c': x[2] * 1.1, 'j': 25, 't': z[0], 'r': z[1], 's': z[2] * 0.9 };
            break;

        case 'N1N2N3':
            return { 'a': x[0], 'b': x[1], 'c': x[2], 'j': 26, 't': z[0], 'r': z[1], 's': z[2] };
            break;
    }
}

module.exports = calcula_novo_estado;

 